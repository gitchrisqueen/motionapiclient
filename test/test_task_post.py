# coding: utf-8

"""
    Motion REST API

    <!-- theme: warning -->  > ### Rate Limit Information > > The Motion API is currently rate limited to 12 requests per minute per user. In the event a user exceeds this rate limit 3 times > in a singe 24 hour period, their API access will be disabled and will require that they contact support to have it re-enabled.  <!-- theme: info -->  > ### Note on Date Formats > > All dates that the Motion API works with are in the format of ISO 8601. **Motion will always return dates in UTC.** 

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest
import datetime

from openapi_client.models.task_post import TaskPost

class TestTaskPost(unittest.TestCase):
    """TaskPost unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> TaskPost:
        """Test TaskPost
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `TaskPost`
        """
        model = TaskPost()
        if include_optional:
            return TaskPost(
                due_date = '2023-09-28T16:46:48.821-06:00',
                duration = None,
                status = '',
                auto_scheduled = openapi_client.models.auto_scheduled_info.AutoScheduledInfo(
                    start_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    deadline_type = 'SOFT', 
                    schedule = 'Work Hours', ),
                name = '0',
                project_id = '',
                workspace_id = '',
                description = '',
                priority = 'MEDIUM',
                labels = [
                    ''
                    ],
                assignee_id = ''
            )
        else:
            return TaskPost(
                name = '0',
                workspace_id = '',
        )
        """

    def testTaskPost(self):
        """Test TaskPost"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
